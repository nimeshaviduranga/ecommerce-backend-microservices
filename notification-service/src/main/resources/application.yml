server:
  port: 9006

spring:
  application:
    name: notification-service
  config:
    import: "optional:configserver:http://localhost:8888"
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce_notification
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.ecommerce.*"
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:test_email@gmail.com}
    password: ${MAIL_PASSWORD:test_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    default-encoding: UTF-8

notification:
  email:
    from: no-reply@ecommerce.com
    enabled: true
  sms:
    enabled: true
    twilio:
      account-sid: ${TWILIO_ACCOUNT_SID:account_sid}
      auth-token: ${TWILIO_AUTH_TOKEN:auth_token}
      phone-number: ${TWILIO_PHONE_NUMBER:twilio_phone_number}
  push:
    enabled: true
    firebase:
      credentials-file: classpath:firebase-service-account.json
  templates:
    path: classpath:templates/

kafka:
  topics:
    order-events: order-events
    payment-events: payment-events
    user-events: user-events

jwt:
  secret: jwt_secret_key
  expiration: 86400000 # 24 hours

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

logging:
  level:
    com.ecommerce.notificationservice: DEBUG
    org.springframework.web: INFO
    org.hibernate: INFO
    org.springframework.kafka: INFO